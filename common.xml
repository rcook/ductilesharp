<project name="common" basedir=".">
  <dirname property="common.base-dir" file="${ant.file.common}"/>

  <available file="${common.base-dir}/common.properties" property="properties.found"/>
  <fail unless="properties.found" message="You must create &quot;common.properties&quot; by hand or using the &quot;configure&quot; script"/>
  <property file="${common.base-dir}/common.properties"/>

  <property name="ant-contrib-path" value=""/>
  <condition property="ant-contrib-path.found">
    <not>
      <equals arg1="${ant-contrib-path}" arg2=""/>
    </not>
  </condition>
  <fail unless="ant-contrib-path.found" message="Must specify &quot;ant-contrib-path&quot; in &quot;common.properties&quot;"/>

  <property name="ant-dotnet-path" value=""/>
  <condition property="ant-dotnet-path.found">
    <not>
      <equals arg1="${ant-dotnet-path}" arg2=""/>
    </not>
  </condition>
  <fail unless="ant-dotnet-path.found" message="Must specify &quot;ant-dotnet-path&quot; in &quot;common.properties&quot;"/>

  <property name="configuration" value=""/>
  <condition property="configuration.found">
    <not>
      <equals arg1="${configuration}" arg2=""/>
    </not>
  </condition>
  <fail unless="configuration.found" message="Must specify &quot;configuration&quot; in &quot;common.properties&quot;"/>

  <property name="nunit-console-path" value=""/>
  <condition property="nunit-console-path.found">
    <not>
      <equals arg1="${nunit-console-path}" arg2=""/>
    </not>
  </condition>
  <fail unless="nunit-console-path.found" message="Must specify &quot;nunit-console-path&quot; in &quot;common.properties&quot;"/>

  <property name="nunit-lib-dir" value=""/>
  <condition property="nunit-lib-dir.found">
    <not>
      <equals arg1="${nunit-lib-dir}" arg2=""/>
    </not>
  </condition>
  <fail unless="nunit-lib-dir.found" message="Must specify &quot;nunit-lib-dir&quot; in &quot;common.properties&quot;"/>

  <property name="stable-gmcs-path" value=""/>
  <condition property="stable-gmcs-path.found">
    <not>
      <equals arg1="${stable-gmcs-path}" arg2=""/>
    </not>
  </condition>
  <fail unless="stable-gmcs-path.found" message="Must specify &quot;stable-gmcs-path&quot; in &quot;common.properties&quot;"/>

  <property name="target-dir" value=""/>
  <condition property="target-dir.found">
    <not>
      <equals arg1="${target-dir}" arg2=""/>
    </not>
  </condition>
  <fail unless="target-dir.found" message="Must specify &quot;target-dir&quot; in &quot;common.properties&quot;"/>

  <property name="target-gacutil-path" value=""/>
  <condition property="target-gacutil-path.found">
    <not>
      <equals arg1="${target-gacutil-path}" arg2=""/>
    </not>
  </condition>
  <fail unless="target-gacutil-path.found" message="Must specify &quot;target-gacutil-path&quot; in &quot;common.properties&quot;"/>

  <property name="target-mono-path" value=""/>
  <condition property="target-mono-path.found">
    <not>
      <equals arg1="${target-mono-path}" arg2=""/>
    </not>
  </condition>
  <fail unless="target-mono-path.found" message="Must specify &quot;target-mono-path&quot; in &quot;common.properties&quot;"/>

  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="${ant-contrib-path}"/>
    </classpath>
  </taskdef>

  <taskdef resource="org/apache/ant/dotnet/antlib.xml">
    <classpath>
      <pathelement location="${ant-dotnet-path}"/>
    </classpath>
  </taskdef>

  <property name="backup-dir" location="${common.base-dir}/backups"/>
  <property name="bin-dir" location="${common.base-dir}/bin"/>
  <property name="bin-configuration-dir" location="${bin-dir}/${configuration}"/>
  <property name="build-dir" location="build"/>
  <property name="build-configuration-dir" location="${build-dir}/${configuration}"/>
  <property name="resource-dir" location="${common.base-dir}/resources"/>
  <property name="target-dmcs-path" location="${target-dir}/bin/dmcs"/>
  <property name="target-lib-dir" location="${target-dir}/lib/mono/4.0"/>
</project>

